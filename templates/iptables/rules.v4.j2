# AhaDNS ip6table rules
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]

# DROP all ANY queries
-A INPUT -p udp --dport 53 -m string --hex-string "|0000FF0001|" --algo bm --from 40 -j DROP
-A INPUT -p tcp --dport 53 -m string --hex-string "|0000FF0001|" --algo bm --from 52 -j DROP

# Block agains floods from queries for isc.org
-A INPUT -p udp -m string --hex-string "|00000000000103697363036f726700|" --algo bm --to 65535 --dport 53 -j DROP
-A INPUT -p tcp -m string --hex-string "|00000000000103697363036f726700|" --algo bm --to 65535 --dport 53 -j DROP
# Protect against floods from queries for ripe.net
-A INPUT -p udp -m string --hex-string "|0000000000010472697065036e6574|" --algo bm --to 65535 --dport 53 -j DROP
-A INPUT -p tcp -m string --hex-string "|0000000000010472697065036e6574|" --algo bm --to 65535 --dport 53 -j DROP

# Allow all lo input
-A INPUT -s 127.0.0.0/8 ! -i lo -j REJECT --reject-with icmp-port-unreachable
-A INPUT -i lo -j ACCEPT

# Rate limit
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -d "{{ ansible_default_ipv4.address }}" -p tcp -m multiport --dports 53,80,443,853 -m hashlimit --hashlimit-above 100/sec --hashlimit-burst 20 --hashlimit-htable-expire 10000 --hashlimit-mode srcip --hashlimit-name dnstcp4 -j REJECT --reject-with icmp-port-unreachable
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -d "{{ ansible_default_ipv4.address }}" -p udp --dport 53 -m hashlimit --hashlimit-above 100/sec --hashlimit-burst 20 --hashlimit-htable-expire 10000 --hashlimit-mode srcip --hashlimit-name dnsudp4 -j REJECT --reject-with icmp-port-unreachable

# Open inputs
-A INPUT -p tcp -m state --state NEW,ESTABLISHED -m tcp --dport 22 -j ACCEPT
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -d "{{ ansible_default_ipv4.address }}" -p tcp -m state --state NEW,ESTABLISHED -m multiport --dports 53,80,443,853 -j ACCEPT
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -d "{{ ansible_default_ipv4.address }}" -p udp -m state --state NEW,ESTABLISHED --dport 53 -j ACCEPT

-A INPUT -i "{{ ansible_default_ipv4.interface }}" -d "{{ ansible_default_ipv4.address }}" -p icmp --icmp-type echo-request -m state --state NEW,ESTABLISHED -j ACCEPT --match limit --limit 100/second
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -d "{{ ansible_default_ipv4.address }}" -p icmp --icmp-type echo-reply -m state --state NEW,ESTABLISHED -j ACCEPT --match limit --limit 100/second

# Log rejected connections (Debugging)
-A INPUT --match limit --limit 1/sec -j LOG --log-prefix "IPTables-Rejected: "

# Allow input of Established connections
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -p tcp -m state --state ESTABLISHED -j ACCEPT
-A INPUT -i "{{ ansible_default_ipv4.interface }}" -p udp -m state --state ESTABLISHED -j ACCEPT

# Drop everything
-A INPUT -j DROP

# Limit output to certain ports
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -p tcp -m state --state NEW,ESTABLISHED,RELATED -m multiport --dports 53,80,443,587 -j ACCEPT
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -p udp -m state --state NEW,ESTABLISHED,RELATED -m multiport --dports 53 -j ACCEPT
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -p icmp --icmp-type echo-reply -j ACCEPT --match limit --limit 60/second
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -p icmp --icmp-type echo-request -j ACCEPT --match limit --limit 60/second

# Allow output of Established connections
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -p tcp -m state --state ESTABLISHED -j ACCEPT
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -p udp -m state --state ESTABLISHED -j ACCEPT

# Allow all local output
-A OUTPUT -o lo -j ACCEPT

# Drops
-A OUTPUT -o "{{ ansible_default_ipv4.interface }}" -j DROP
-A OUTPUT -j DROP
-A FORWARD -j DROP
COMMIT
# End
